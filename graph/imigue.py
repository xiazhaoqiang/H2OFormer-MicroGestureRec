import sys

sys.path.extend(['../'])
from graph import tools


class Graph:
    def __init__(self, labeling_mode='spatial', num_point=89, index_mask=None):
        self.num_point = num_point
        if num_point == 89:

            self.inward_ori_index = [(0, 1), (2, 1), (3, 2), (4, 3), (5, 1), (6, 5),
                                     (7, 6), (8, 1), (9, 0), (10, 0), (11, 9), (12, 10),

                                     (14, 13), (15, 14), (16, 15), (17, 16), (18, 13), (19, 18), (20, 19), (21, 20),
                                     (21, 17), (22, 13),
                                     (23, 22), (24, 23), (25, 24), (26, 13), (27, 26), (28, 27), (29, 28), (30, 13),
                                     (31, 30), (32, 31),
                                     (33, 32),

                                     (35, 34), (36, 35), (37, 36), (38, 37), (39, 34), (40, 39), (41, 40), (42, 41),
                                     (42, 38), (43, 34),
                                     (44, 43), (45, 44), (46, 45), (47, 34), (48, 47), (49, 48), (50, 49), (51, 34),
                                     (52, 51), (53, 52),
                                     (54, 53),

                                     (56, 55), (57, 87), (58, 57), (58, 59), (59, 60), (60, 55), (62, 61), (63, 88),
                                     (64, 63), (64, 65),
                                     (65, 66), (66, 61), (68, 67), (69, 68), (70, 69), (71, 70), (72, 71), (73, 72),
                                     (73, 74), (73, 83),
                                     (74, 75), (75, 76), (76, 77), (77, 78), (78, 67), (79, 67), (80, 79), (81, 80),
                                     (82, 81), (83, 82),
                                     (83, 84), (84, 85), (85, 86), (86, 79), (87, 57), (88, 62)
                                     ]
        elif num_point == 58:
            # skeleton: 12, left_hand: 6, right_hand: 6, face: 34
            self.inward_ori_index = [(0, 1), (2, 1), (3, 2), (4, 3), (5, 1), (6, 5),
                                     (7, 6), (8, 0), (9, 0), (10, 8), (11, 9),

                                     (13, 12), (14, 12), (15, 12), (16, 12), (17, 12),

                                     (19, 18), (20, 18), (21, 18), (22, 18), (23, 18),

                                     (25, 24), (26, 56), (27, 26), (27, 28), (28, 29), (29, 24), (31, 30), (32, 57),
                                     (33, 32), (33, 34),
                                     (34, 35), (35, 30), (37, 36), (38, 37), (39, 38), (40, 39), (41, 40), (42, 41),
                                     (42, 43), (42, 52),
                                     (43, 44), (44, 45), (45, 46), (46, 47), (47, 36), (48, 36), (49, 48), (50, 49),
                                     (51, 50), (52, 51),
                                     (52, 53), (53, 54), (54, 55), (55, 48), (56, 26), (57, 31)
                                     ]
        elif num_point == 24:
            # skeleton: 12, left_hand: 6, right_hand: 6
            self.inward_ori_index = [(0, 1), (2, 1), (3, 2), (4, 3), (5, 1), (6, 5),
                                     (7, 6), (8, 0), (9, 0), (10, 8), (11, 9),

                                     (13, 12), (14, 12), (15, 12), (16, 12), (17, 12),

                                     (19, 18), (20, 18), (21, 18), (22, 18), (23, 18)
                                     ]
        elif num_point == 22:
            # skeleton: 12, left_hand: 5, right_hand: 5
            self.inward_ori_index = [(0, 1), (1, 2), (2, 3), (3, 4), (1, 5), (5, 6),
                                     (6, 7), (0, 8), (8, 10), (0, 9), (9, 11),

                                     (7, 12), (7, 13), (7, 14), (7, 15), (7, 16),

                                     (4, 17), (4, 18), (4, 19), (4, 20), (4, 21)
                                     ]
        elif num_point == 55:

            self.inward_ori_index = [(0, 1), (2, 1), (3, 2), (4, 3), (5, 1), (6, 5),
                                     (7, 6), (8, 1), (9, 0), (10, 0), (11, 9), (12, 10),

                                     (14, 13), (15, 14), (16, 15), (17, 16), (18, 13), (19, 18), (20, 19), (21, 20),
                                     (21, 17), (22, 13),
                                     (23, 22), (24, 23), (25, 24), (26, 13), (27, 26), (28, 27), (29, 28), (30, 13),
                                     (31, 30), (32, 31),
                                     (33, 32),

                                     (35, 34), (36, 35), (37, 36), (38, 37), (39, 34), (40, 39), (41, 40), (42, 41),
                                     (42, 38), (43, 34),
                                     (44, 43), (45, 44), (46, 45), (47, 34), (48, 47), (49, 48), (50, 49), (51, 34),
                                     (52, 51), (53, 52),
                                     (54, 53)
                                     ]
        elif num_point == 25:

            self.inward_ori_index = [(0, 1), (2, 1), (3, 2), (4, 3), (5, 1), (6, 5),
                                     (7, 6), (8, 1), (9, 8), (10, 9), (11, 10), (12, 8),
                                     (13, 12), (14, 13), (15, 0), (16, 0), (17, 15), (18, 16),
                                     (19, 14), (20, 19), (21, 14), (22, 11), (23, 22), (24, 11)]
        elif num_point == 67:

            self.inward_ori_index = [(0, 1), (2, 1), (3, 2), (4, 3), (5, 1), (6, 5),
                                     (7, 6), (8, 1), (9, 8), (10, 9), (11, 10), (12, 8),
                                     (13, 12), (14, 13), (15, 0), (16, 0), (17, 15), (18, 16),
                                     (19, 14), (20, 19), (21, 14), (22, 11), (23, 22), (24, 11),

                                     (26, 25), (27, 26), (28, 27), (29, 28), (30, 25), (31, 30),
                                     (32, 31), (33, 32), (33, 29), (34, 25), (35, 34), (36, 35),
                                     (37, 36), (38, 25), (39, 38), (40, 39), (41, 40), (42, 25), (43, 42), (44, 43),
                                     (45, 44),

                                     (47, 46), (48, 47), (49, 48), (50, 49), (51, 46), (52, 51),
                                     (53, 52), (54, 53), (54, 50), (55, 46), (56, 55), (57, 56),
                                     (58, 57), (59, 46), (60, 59), (61, 60), (62, 61), (63, 46), (64, 63), (65, 64),
                                     (66, 65)
                                     ]
        elif num_point == 137:

            self.inward_ori_index = [(0, 1), (2, 1), (3, 2), (4, 3), (5, 1), (6, 5),
                                     (7, 6), (8, 1), (9, 8), (10, 9), (11, 10), (12, 8),
                                     (13, 12), (14, 13), (15, 0), (16, 0), (17, 15), (18, 16),
                                     (19, 14), (20, 19), (21, 14), (22, 11), (23, 22), (24, 11),

                                     (26, 25), (27, 26), (28, 27), (29, 28),
                                     (30, 25), (31, 30), (32, 31), (33, 32),
                                     # (33, 29),
                                     (34, 25), (35, 34), (36, 35), (37, 36),
                                     (38, 25), (39, 38), (40, 39), (41, 40),
                                     (42, 25), (43, 42), (44, 43), (45, 44),

                                     (47, 46), (48, 47), (49, 48), (50, 49),
                                     (51, 46), (52, 51), (53, 52), (54, 53),
                                     # (54, 50),
                                     (55, 46), (56, 55), (57, 56), (58, 57),
                                     (59, 46), (60, 59), (61, 60), (62, 61),
                                     (63, 46), (64, 63), (65, 64), (66, 65),

                                     (68, 67), (69, 68), (70, 69), (71, 70), (72, 71), (73, 72), (74, 73), (75, 74),
                                     (76, 75),
                                     (77, 76), (78, 77), (79, 78), (80, 79), (81, 80), (82, 81), (83, 82), (85, 84),
                                     (86, 85),
                                     (87, 86), (88, 87), (90, 89), (91, 90), (92, 91), (93, 92), (95, 94), (96, 95),
                                     (97, 96),
                                     (99, 98), (100, 99), (101, 100), (102, 101),
                                     (104, 103), (105, 135), (106, 105), (106, 107), (107, 108), (108, 103),
                                     (110, 109), (111, 136), (112, 111), (112, 113), (113, 114), (114, 109),
                                     (116, 115), (117, 116), (118, 117), (119, 118), (120, 119), (121, 120),
                                     (121, 122), (121, 131), (122, 123), (123, 124), (124, 125), (125, 126), (126, 115),
                                     (127, 115), (128, 127), (129, 128), (130, 129), (131, 130), (131, 132), (132, 133),
                                     (133, 134), (134, 127),

                                     (135, 105), (136, 110)
                                     ]

        if index_mask is not None:
            self.inward_ori_index = [tup for tup in self.inward_ori_index if
                                     not any(item in index_mask for item in tup)]

        self.self_link = [(i, i) for i in range(num_point)]
        self.inward = [(i, j) for (i, j) in self.inward_ori_index]
        self.outward = [(j, i) for (i, j) in self.inward]
        self.neighbor = self.inward + self.outward
        self.A = self.get_adjacency_matrix(labeling_mode)

    def get_inward(self):
        return self.inward

    def get_limb_label(self, groups):
        limb_label = []
        for tup in self.inward_ori_index:
            _, end = tup
            for label_id, group in enumerate(groups):
                if end in group:
                    limb_label.append(label_id)
        return limb_label

    def get_adjacency_matrix(self, labeling_mode=None):
        if labeling_mode is None:
            return self.A
        if labeling_mode == 'spatial':
            A = tools.get_spatial_graph(self.num_point, self.self_link, self.inward, self.outward)
        else:
            raise ValueError()
        return A
